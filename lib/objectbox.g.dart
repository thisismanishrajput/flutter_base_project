// GENERATED CODE - DO NOT MODIFY BY HAND
// This code was generated by ObjectBox. To update it run the generator again
// with `dart run build_runner build`.
// See also https://docs.objectbox.io/getting-started#generate-objectbox-code

// ignore_for_file: camel_case_types, depend_on_referenced_packages
// coverage:ignore-file

import 'dart:typed_data';

import 'package:flat_buffers/flat_buffers.dart' as fb;
import 'package:objectbox/internal.dart'
    as obx_int; // generated code can access "internal" functionality
import 'package:objectbox/objectbox.dart' as obx;
import 'package:objectbox_flutter_libs/objectbox_flutter_libs.dart';

import 'features/orders/data/model/order_model.dart';

export 'package:objectbox/objectbox.dart'; // so that callers only have to import this file

final _entities = <obx_int.ModelEntity>[
  obx_int.ModelEntity(
      id: const obx_int.IdUid(1, 4953115866796825366),
      name: 'ChargingStation',
      lastPropertyId: const obx_int.IdUid(11, 2143793658382009127),
      flags: 0,
      properties: <obx_int.ModelProperty>[
        obx_int.ModelProperty(
            id: const obx_int.IdUid(1, 5079297993731988999),
            name: 'id',
            type: 6,
            flags: 1),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(2, 3849559250715562412),
            name: 'deviceId',
            type: 9,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(3, 6574043979899747520),
            name: 'locationId',
            type: 9,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(4, 709066809242827216),
            name: 'evseUid',
            type: 9,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(5, 6699966564797558332),
            name: 'connectorId',
            type: 9,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(6, 2052437331273768545),
            name: 'name',
            type: 9,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(7, 6437176158522176139),
            name: 'mobileNo',
            type: 9,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(8, 2100463611616267712),
            name: 'address',
            type: 9,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(9, 5345672831067343579),
            name: 'latitude',
            type: 9,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(10, 4112415262767273607),
            name: 'longitude',
            type: 9,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(11, 2143793658382009127),
            name: 'description',
            type: 9,
            flags: 0)
      ],
      relations: <obx_int.ModelRelation>[],
      backlinks: <obx_int.ModelBacklink>[]),
  obx_int.ModelEntity(
      id: const obx_int.IdUid(2, 3976517720002197394),
      name: 'MyOrder',
      lastPropertyId: const obx_int.IdUid(16, 8254004166730370439),
      flags: 0,
      properties: <obx_int.ModelProperty>[
        obx_int.ModelProperty(
            id: const obx_int.IdUid(1, 5652306841387449545),
            name: 'id',
            type: 6,
            flags: 1),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(2, 3906140019991504815),
            name: 'chargingStatusesId',
            type: 6,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(3, 1970298710613495101),
            name: 'appusersId',
            type: 6,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(4, 1882618726441070104),
            name: 'sessionId',
            type: 9,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(5, 4638767292065625475),
            name: 'startTime',
            type: 9,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(6, 8303819917095229687),
            name: 'endTime',
            type: 9,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(7, 6193245401316506664),
            name: 'status',
            type: 9,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(8, 1916643526565222925),
            name: 'endTimeExtend',
            type: 9,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(9, 3650369348277865515),
            name: 'amount',
            type: 6,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(10, 1742282570210527505),
            name: 'createdAt',
            type: 10,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(11, 7107619558445654641),
            name: 'updatedAt',
            type: 10,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(12, 5581277188632054021),
            name: 'actualStartTime',
            type: 9,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(13, 5771925501917009863),
            name: 'actualEndTime',
            type: 9,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(14, 7750680127354398996),
            name: 'kwh',
            type: 9,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(15, 4361219782855579913),
            name: 'chargingStationId',
            type: 11,
            flags: 520,
            indexId: const obx_int.IdUid(1, 1646987747817088041),
            relationTarget: 'ChargingStation'),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(16, 8254004166730370439),
            name: 'walletId',
            type: 11,
            flags: 520,
            indexId: const obx_int.IdUid(2, 4022947816293389846),
            relationTarget: 'Wallet')
      ],
      relations: <obx_int.ModelRelation>[],
      backlinks: <obx_int.ModelBacklink>[]),
  obx_int.ModelEntity(
      id: const obx_int.IdUid(3, 323506799793622405),
      name: 'OrderModel',
      lastPropertyId: const obx_int.IdUid(3, 5403479751363170689),
      flags: 0,
      properties: <obx_int.ModelProperty>[
        obx_int.ModelProperty(
            id: const obx_int.IdUid(1, 6647668264327295294),
            name: 'id',
            type: 6,
            flags: 1),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(2, 7695828148896051344),
            name: 'status',
            type: 1,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(3, 5403479751363170689),
            name: 'message',
            type: 9,
            flags: 0)
      ],
      relations: <obx_int.ModelRelation>[
        obx_int.ModelRelation(
            id: const obx_int.IdUid(1, 5401849621531167813),
            name: 'data',
            targetId: const obx_int.IdUid(2, 3976517720002197394))
      ],
      backlinks: <obx_int.ModelBacklink>[]),
  obx_int.ModelEntity(
      id: const obx_int.IdUid(4, 6612045445230070358),
      name: 'Wallet',
      lastPropertyId: const obx_int.IdUid(5, 2350972604102801208),
      flags: 0,
      properties: <obx_int.ModelProperty>[
        obx_int.ModelProperty(
            id: const obx_int.IdUid(1, 6607570824923142157),
            name: 'id',
            type: 6,
            flags: 1),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(2, 1241941121106893911),
            name: 'appusersId',
            type: 6,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(3, 5749612974745007393),
            name: 'bookingsId',
            type: 6,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(4, 7137360088300629055),
            name: 'amount',
            type: 9,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(5, 2350972604102801208),
            name: 'walletType',
            type: 9,
            flags: 0)
      ],
      relations: <obx_int.ModelRelation>[],
      backlinks: <obx_int.ModelBacklink>[])
];

/// Shortcut for [obx.Store.new] that passes [getObjectBoxModel] and for Flutter
/// apps by default a [directory] using `defaultStoreDirectory()` from the
/// ObjectBox Flutter library.
///
/// Note: for desktop apps it is recommended to specify a unique [directory].
///
/// See [obx.Store.new] for an explanation of all parameters.
///
/// For Flutter apps, also calls `loadObjectBoxLibraryAndroidCompat()` from
/// the ObjectBox Flutter library to fix loading the native ObjectBox library
/// on Android 6 and older.
Future<obx.Store> openStore(
    {String? directory,
    int? maxDBSizeInKB,
    int? maxDataSizeInKB,
    int? fileMode,
    int? maxReaders,
    bool queriesCaseSensitiveDefault = true,
    String? macosApplicationGroup}) async {
  await loadObjectBoxLibraryAndroidCompat();
  return obx.Store(getObjectBoxModel(),
      directory: directory ?? (await defaultStoreDirectory()).path,
      maxDBSizeInKB: maxDBSizeInKB,
      maxDataSizeInKB: maxDataSizeInKB,
      fileMode: fileMode,
      maxReaders: maxReaders,
      queriesCaseSensitiveDefault: queriesCaseSensitiveDefault,
      macosApplicationGroup: macosApplicationGroup);
}

/// Returns the ObjectBox model definition for this project for use with
/// [obx.Store.new].
obx_int.ModelDefinition getObjectBoxModel() {
  final model = obx_int.ModelInfo(
      entities: _entities,
      lastEntityId: const obx_int.IdUid(4, 6612045445230070358),
      lastIndexId: const obx_int.IdUid(2, 4022947816293389846),
      lastRelationId: const obx_int.IdUid(1, 5401849621531167813),
      lastSequenceId: const obx_int.IdUid(0, 0),
      retiredEntityUids: const [],
      retiredIndexUids: const [],
      retiredPropertyUids: const [],
      retiredRelationUids: const [],
      modelVersion: 5,
      modelVersionParserMinimum: 5,
      version: 1);

  final bindings = <Type, obx_int.EntityDefinition>{
    ChargingStation: obx_int.EntityDefinition<ChargingStation>(
        model: _entities[0],
        toOneRelations: (ChargingStation object) => [],
        toManyRelations: (ChargingStation object) => {},
        getId: (ChargingStation object) => object.id,
        setId: (ChargingStation object, int id) {
          object.id = id;
        },
        objectToFB: (ChargingStation object, fb.Builder fbb) {
          final deviceIdOffset = object.deviceId == null
              ? null
              : fbb.writeString(object.deviceId!);
          final locationIdOffset = object.locationId == null
              ? null
              : fbb.writeString(object.locationId!);
          final evseUidOffset =
              object.evseUid == null ? null : fbb.writeString(object.evseUid!);
          final connectorIdOffset = object.connectorId == null
              ? null
              : fbb.writeString(object.connectorId!);
          final nameOffset =
              object.name == null ? null : fbb.writeString(object.name!);
          final mobileNoOffset = object.mobileNo == null
              ? null
              : fbb.writeString(object.mobileNo!);
          final addressOffset =
              object.address == null ? null : fbb.writeString(object.address!);
          final latitudeOffset = object.latitude == null
              ? null
              : fbb.writeString(object.latitude!);
          final longitudeOffset = object.longitude == null
              ? null
              : fbb.writeString(object.longitude!);
          final descriptionOffset = object.description == null
              ? null
              : fbb.writeString(object.description!);
          fbb.startTable(12);
          fbb.addInt64(0, object.id);
          fbb.addOffset(1, deviceIdOffset);
          fbb.addOffset(2, locationIdOffset);
          fbb.addOffset(3, evseUidOffset);
          fbb.addOffset(4, connectorIdOffset);
          fbb.addOffset(5, nameOffset);
          fbb.addOffset(6, mobileNoOffset);
          fbb.addOffset(7, addressOffset);
          fbb.addOffset(8, latitudeOffset);
          fbb.addOffset(9, longitudeOffset);
          fbb.addOffset(10, descriptionOffset);
          fbb.finish(fbb.endTable());
          return object.id;
        },
        objectFromFB: (obx.Store store, ByteData fbData) {
          final buffer = fb.BufferContext(fbData);
          final rootOffset = buffer.derefObject(0);
          final deviceIdParam = const fb.StringReader(asciiOptimization: true)
              .vTableGetNullable(buffer, rootOffset, 6);
          final locationIdParam = const fb.StringReader(asciiOptimization: true)
              .vTableGetNullable(buffer, rootOffset, 8);
          final evseUidParam = const fb.StringReader(asciiOptimization: true)
              .vTableGetNullable(buffer, rootOffset, 10);
          final connectorIdParam =
              const fb.StringReader(asciiOptimization: true)
                  .vTableGetNullable(buffer, rootOffset, 12);
          final nameParam = const fb.StringReader(asciiOptimization: true)
              .vTableGetNullable(buffer, rootOffset, 14);
          final mobileNoParam = const fb.StringReader(asciiOptimization: true)
              .vTableGetNullable(buffer, rootOffset, 16);
          final addressParam = const fb.StringReader(asciiOptimization: true)
              .vTableGetNullable(buffer, rootOffset, 18);
          final latitudeParam = const fb.StringReader(asciiOptimization: true)
              .vTableGetNullable(buffer, rootOffset, 20);
          final longitudeParam = const fb.StringReader(asciiOptimization: true)
              .vTableGetNullable(buffer, rootOffset, 22);
          final descriptionParam =
              const fb.StringReader(asciiOptimization: true)
                  .vTableGetNullable(buffer, rootOffset, 24);
          final object = ChargingStation(
              deviceId: deviceIdParam,
              locationId: locationIdParam,
              evseUid: evseUidParam,
              connectorId: connectorIdParam,
              name: nameParam,
              mobileNo: mobileNoParam,
              address: addressParam,
              latitude: latitudeParam,
              longitude: longitudeParam,
              description: descriptionParam)
            ..id = const fb.Int64Reader().vTableGet(buffer, rootOffset, 4, 0);

          return object;
        }),
    MyOrder: obx_int.EntityDefinition<MyOrder>(
        model: _entities[1],
        toOneRelations: (MyOrder object) =>
            [object.chargingStation, object.wallet],
        toManyRelations: (MyOrder object) => {},
        getId: (MyOrder object) => object.id,
        setId: (MyOrder object, int id) {
          object.id = id;
        },
        objectToFB: (MyOrder object, fb.Builder fbb) {
          final sessionIdOffset = object.sessionId == null
              ? null
              : fbb.writeString(object.sessionId!);
          final startTimeOffset = object.startTime == null
              ? null
              : fbb.writeString(object.startTime!);
          final endTimeOffset =
              object.endTime == null ? null : fbb.writeString(object.endTime!);
          final statusOffset =
              object.status == null ? null : fbb.writeString(object.status!);
          final endTimeExtendOffset = object.endTimeExtend == null
              ? null
              : fbb.writeString(object.endTimeExtend!);
          final actualStartTimeOffset = object.actualStartTime == null
              ? null
              : fbb.writeString(object.actualStartTime!);
          final actualEndTimeOffset = object.actualEndTime == null
              ? null
              : fbb.writeString(object.actualEndTime!);
          final kwhOffset =
              object.kwh == null ? null : fbb.writeString(object.kwh!);
          fbb.startTable(17);
          fbb.addInt64(0, object.id);
          fbb.addInt64(1, object.chargingStatusesId);
          fbb.addInt64(2, object.appusersId);
          fbb.addOffset(3, sessionIdOffset);
          fbb.addOffset(4, startTimeOffset);
          fbb.addOffset(5, endTimeOffset);
          fbb.addOffset(6, statusOffset);
          fbb.addOffset(7, endTimeExtendOffset);
          fbb.addInt64(8, object.amount);
          fbb.addInt64(9, object.createdAt?.millisecondsSinceEpoch);
          fbb.addInt64(10, object.updatedAt?.millisecondsSinceEpoch);
          fbb.addOffset(11, actualStartTimeOffset);
          fbb.addOffset(12, actualEndTimeOffset);
          fbb.addOffset(13, kwhOffset);
          fbb.addInt64(14, object.chargingStation.targetId);
          fbb.addInt64(15, object.wallet.targetId);
          fbb.finish(fbb.endTable());
          return object.id;
        },
        objectFromFB: (obx.Store store, ByteData fbData) {
          final buffer = fb.BufferContext(fbData);
          final rootOffset = buffer.derefObject(0);
          final createdAtValue =
              const fb.Int64Reader().vTableGetNullable(buffer, rootOffset, 22);
          final updatedAtValue =
              const fb.Int64Reader().vTableGetNullable(buffer, rootOffset, 24);
          final chargingStatusesIdParam =
              const fb.Int64Reader().vTableGetNullable(buffer, rootOffset, 6);
          final appusersIdParam =
              const fb.Int64Reader().vTableGetNullable(buffer, rootOffset, 8);
          final sessionIdParam = const fb.StringReader(asciiOptimization: true)
              .vTableGetNullable(buffer, rootOffset, 10);
          final startTimeParam = const fb.StringReader(asciiOptimization: true)
              .vTableGetNullable(buffer, rootOffset, 12);
          final endTimeParam = const fb.StringReader(asciiOptimization: true)
              .vTableGetNullable(buffer, rootOffset, 14);
          final statusParam = const fb.StringReader(asciiOptimization: true)
              .vTableGetNullable(buffer, rootOffset, 16);
          final endTimeExtendParam =
              const fb.StringReader(asciiOptimization: true)
                  .vTableGetNullable(buffer, rootOffset, 18);
          final amountParam =
              const fb.Int64Reader().vTableGetNullable(buffer, rootOffset, 20);
          final createdAtParam = createdAtValue == null
              ? null
              : DateTime.fromMillisecondsSinceEpoch(createdAtValue);
          final updatedAtParam = updatedAtValue == null
              ? null
              : DateTime.fromMillisecondsSinceEpoch(updatedAtValue);
          final actualStartTimeParam =
              const fb.StringReader(asciiOptimization: true)
                  .vTableGetNullable(buffer, rootOffset, 26);
          final actualEndTimeParam =
              const fb.StringReader(asciiOptimization: true)
                  .vTableGetNullable(buffer, rootOffset, 28);
          final kwhParam = const fb.StringReader(asciiOptimization: true)
              .vTableGetNullable(buffer, rootOffset, 30);
          final object = MyOrder(
              chargingStatusesId: chargingStatusesIdParam,
              appusersId: appusersIdParam,
              sessionId: sessionIdParam,
              startTime: startTimeParam,
              endTime: endTimeParam,
              status: statusParam,
              endTimeExtend: endTimeExtendParam,
              amount: amountParam,
              createdAt: createdAtParam,
              updatedAt: updatedAtParam,
              actualStartTime: actualStartTimeParam,
              actualEndTime: actualEndTimeParam,
              kwh: kwhParam)
            ..id = const fb.Int64Reader().vTableGet(buffer, rootOffset, 4, 0);
          object.chargingStation.targetId =
              const fb.Int64Reader().vTableGet(buffer, rootOffset, 32, 0);
          object.chargingStation.attach(store);
          object.wallet.targetId =
              const fb.Int64Reader().vTableGet(buffer, rootOffset, 34, 0);
          object.wallet.attach(store);
          return object;
        }),
    OrderModel: obx_int.EntityDefinition<OrderModel>(
        model: _entities[2],
        toOneRelations: (OrderModel object) => [],
        toManyRelations: (OrderModel object) =>
            {obx_int.RelInfo<OrderModel>.toMany(1, object.id): object.data},
        getId: (OrderModel object) => object.id,
        setId: (OrderModel object, int id) {
          object.id = id;
        },
        objectToFB: (OrderModel object, fb.Builder fbb) {
          final messageOffset =
              object.message == null ? null : fbb.writeString(object.message!);
          fbb.startTable(4);
          fbb.addInt64(0, object.id);
          fbb.addBool(1, object.status);
          fbb.addOffset(2, messageOffset);
          fbb.finish(fbb.endTable());
          return object.id;
        },
        objectFromFB: (obx.Store store, ByteData fbData) {
          final buffer = fb.BufferContext(fbData);
          final rootOffset = buffer.derefObject(0);
          final statusParam =
              const fb.BoolReader().vTableGetNullable(buffer, rootOffset, 6);
          final messageParam = const fb.StringReader(asciiOptimization: true)
              .vTableGetNullable(buffer, rootOffset, 8);
          final object = OrderModel(status: statusParam, message: messageParam)
            ..id = const fb.Int64Reader().vTableGet(buffer, rootOffset, 4, 0);
          obx_int.InternalToManyAccess.setRelInfo<OrderModel>(object.data,
              store, obx_int.RelInfo<OrderModel>.toMany(1, object.id));
          return object;
        }),
    Wallet: obx_int.EntityDefinition<Wallet>(
        model: _entities[3],
        toOneRelations: (Wallet object) => [],
        toManyRelations: (Wallet object) => {},
        getId: (Wallet object) => object.id,
        setId: (Wallet object, int id) {
          object.id = id;
        },
        objectToFB: (Wallet object, fb.Builder fbb) {
          final amountOffset =
              object.amount == null ? null : fbb.writeString(object.amount!);
          final walletTypeOffset = object.walletType == null
              ? null
              : fbb.writeString(object.walletType!);
          fbb.startTable(6);
          fbb.addInt64(0, object.id);
          fbb.addInt64(1, object.appusersId);
          fbb.addInt64(2, object.bookingsId);
          fbb.addOffset(3, amountOffset);
          fbb.addOffset(4, walletTypeOffset);
          fbb.finish(fbb.endTable());
          return object.id;
        },
        objectFromFB: (obx.Store store, ByteData fbData) {
          final buffer = fb.BufferContext(fbData);
          final rootOffset = buffer.derefObject(0);
          final appusersIdParam =
              const fb.Int64Reader().vTableGetNullable(buffer, rootOffset, 6);
          final bookingsIdParam =
              const fb.Int64Reader().vTableGetNullable(buffer, rootOffset, 8);
          final amountParam = const fb.StringReader(asciiOptimization: true)
              .vTableGetNullable(buffer, rootOffset, 10);
          final walletTypeParam = const fb.StringReader(asciiOptimization: true)
              .vTableGetNullable(buffer, rootOffset, 12);
          final object = Wallet(
              appusersId: appusersIdParam,
              bookingsId: bookingsIdParam,
              amount: amountParam,
              walletType: walletTypeParam)
            ..id = const fb.Int64Reader().vTableGet(buffer, rootOffset, 4, 0);

          return object;
        })
  };

  return obx_int.ModelDefinition(model, bindings);
}

/// [ChargingStation] entity fields to define ObjectBox queries.
class ChargingStation_ {
  /// See [ChargingStation.id].
  static final id =
      obx.QueryIntegerProperty<ChargingStation>(_entities[0].properties[0]);

  /// See [ChargingStation.deviceId].
  static final deviceId =
      obx.QueryStringProperty<ChargingStation>(_entities[0].properties[1]);

  /// See [ChargingStation.locationId].
  static final locationId =
      obx.QueryStringProperty<ChargingStation>(_entities[0].properties[2]);

  /// See [ChargingStation.evseUid].
  static final evseUid =
      obx.QueryStringProperty<ChargingStation>(_entities[0].properties[3]);

  /// See [ChargingStation.connectorId].
  static final connectorId =
      obx.QueryStringProperty<ChargingStation>(_entities[0].properties[4]);

  /// See [ChargingStation.name].
  static final name =
      obx.QueryStringProperty<ChargingStation>(_entities[0].properties[5]);

  /// See [ChargingStation.mobileNo].
  static final mobileNo =
      obx.QueryStringProperty<ChargingStation>(_entities[0].properties[6]);

  /// See [ChargingStation.address].
  static final address =
      obx.QueryStringProperty<ChargingStation>(_entities[0].properties[7]);

  /// See [ChargingStation.latitude].
  static final latitude =
      obx.QueryStringProperty<ChargingStation>(_entities[0].properties[8]);

  /// See [ChargingStation.longitude].
  static final longitude =
      obx.QueryStringProperty<ChargingStation>(_entities[0].properties[9]);

  /// See [ChargingStation.description].
  static final description =
      obx.QueryStringProperty<ChargingStation>(_entities[0].properties[10]);
}

/// [MyOrder] entity fields to define ObjectBox queries.
class MyOrder_ {
  /// See [MyOrder.id].
  static final id =
      obx.QueryIntegerProperty<MyOrder>(_entities[1].properties[0]);

  /// See [MyOrder.chargingStatusesId].
  static final chargingStatusesId =
      obx.QueryIntegerProperty<MyOrder>(_entities[1].properties[1]);

  /// See [MyOrder.appusersId].
  static final appusersId =
      obx.QueryIntegerProperty<MyOrder>(_entities[1].properties[2]);

  /// See [MyOrder.sessionId].
  static final sessionId =
      obx.QueryStringProperty<MyOrder>(_entities[1].properties[3]);

  /// See [MyOrder.startTime].
  static final startTime =
      obx.QueryStringProperty<MyOrder>(_entities[1].properties[4]);

  /// See [MyOrder.endTime].
  static final endTime =
      obx.QueryStringProperty<MyOrder>(_entities[1].properties[5]);

  /// See [MyOrder.status].
  static final status =
      obx.QueryStringProperty<MyOrder>(_entities[1].properties[6]);

  /// See [MyOrder.endTimeExtend].
  static final endTimeExtend =
      obx.QueryStringProperty<MyOrder>(_entities[1].properties[7]);

  /// See [MyOrder.amount].
  static final amount =
      obx.QueryIntegerProperty<MyOrder>(_entities[1].properties[8]);

  /// See [MyOrder.createdAt].
  static final createdAt =
      obx.QueryDateProperty<MyOrder>(_entities[1].properties[9]);

  /// See [MyOrder.updatedAt].
  static final updatedAt =
      obx.QueryDateProperty<MyOrder>(_entities[1].properties[10]);

  /// See [MyOrder.actualStartTime].
  static final actualStartTime =
      obx.QueryStringProperty<MyOrder>(_entities[1].properties[11]);

  /// See [MyOrder.actualEndTime].
  static final actualEndTime =
      obx.QueryStringProperty<MyOrder>(_entities[1].properties[12]);

  /// See [MyOrder.kwh].
  static final kwh =
      obx.QueryStringProperty<MyOrder>(_entities[1].properties[13]);

  /// See [MyOrder.chargingStation].
  static final chargingStation =
      obx.QueryRelationToOne<MyOrder, ChargingStation>(
          _entities[1].properties[14]);

  /// See [MyOrder.wallet].
  static final wallet =
      obx.QueryRelationToOne<MyOrder, Wallet>(_entities[1].properties[15]);
}

/// [OrderModel] entity fields to define ObjectBox queries.
class OrderModel_ {
  /// See [OrderModel.id].
  static final id =
      obx.QueryIntegerProperty<OrderModel>(_entities[2].properties[0]);

  /// See [OrderModel.status].
  static final status =
      obx.QueryBooleanProperty<OrderModel>(_entities[2].properties[1]);

  /// See [OrderModel.message].
  static final message =
      obx.QueryStringProperty<OrderModel>(_entities[2].properties[2]);

  /// see [OrderModel.data]
  static final data =
      obx.QueryRelationToMany<OrderModel, MyOrder>(_entities[2].relations[0]);
}

/// [Wallet] entity fields to define ObjectBox queries.
class Wallet_ {
  /// See [Wallet.id].
  static final id =
      obx.QueryIntegerProperty<Wallet>(_entities[3].properties[0]);

  /// See [Wallet.appusersId].
  static final appusersId =
      obx.QueryIntegerProperty<Wallet>(_entities[3].properties[1]);

  /// See [Wallet.bookingsId].
  static final bookingsId =
      obx.QueryIntegerProperty<Wallet>(_entities[3].properties[2]);

  /// See [Wallet.amount].
  static final amount =
      obx.QueryStringProperty<Wallet>(_entities[3].properties[3]);

  /// See [Wallet.walletType].
  static final walletType =
      obx.QueryStringProperty<Wallet>(_entities[3].properties[4]);
}
